const GROCERY_ITEM_MODULE = require("grocery_item");
const GROCERY_ITEM_CLASS = GROCERY_ITEM_MODULE.GroceryItem;
const FILE_READER_MODULE = require("file_reader");
const FILE_READER_CLASS = FILE_READER_MODULE.FileReader; 
// Server-Side Grocery List representation
// TODO: I know I used a json object with a list inside to store items I may just change to a list we'll see
class GroceryList{
    constructor(){
        this._listData = {"items":[]};
    }

    addItem(name){
        this._listData["items"].push(new GROCERY_ITEM_CLASS(name, 1, ""));
    }

    addItemFromJSON(jsonObj){
        this._listData["items"].push(new GROCERY_ITEM_CLASS(jsonObj["name"], jsonObj["quantity"], jsonObj["description"]));
    }

    addItemFromJSON(jsonObj){
        this._listData["items"].push(GROCERY_ITEM_CLASS.fromJSON(jsonObj));
    }
 
    toDataString(){
        // TODO
    }

    toJSON(){
        let jsonResponse = {}
        jsonResponse["items"] = [];
        for (let item of this._listData["items"]){
            jsonResponse["items"].push(item.toJSON());
        }
        return jsonResponse;
    }

    fromDataJSON(dataJSON){
        // TODO
    }

    getLength(){
        return this._listData["items"].length;
    }

    getList(){
        return this._listData["items"];
    }

    // Assumes element @ index exists
    getByIndex(index){
        return this._listData["items"][index];
    }

    async readFromFile(fileName){
        let csvMapList = await FILE_READER_CLASS.readCSV(fileName);
        for (let jsonObj of csvMapList){
            this.addItemFromJSON(jsonObj);
        }
    }

    async saveToFile(fileName){
        // TODO: Best way to remember what keys are used?
        let fileLines = ["name,quantity,description"];
        let jsonRep = this.toJSON();
        for (let item of jsonRep["items"]){
            fileLines.push(item["name"] + "," + item["quantity"] + "," + item["description"]);
        }
        await FILE_READER_CLASS.saveFile(fileName, fileLines);
    }

    removeAtIndex(index){
        for (let i = index; i < this.getLength() - 1; i++){
            this._listData["items"][i] = this._listData["items"][i+1];
        }
        this._listData["items"].pop();
    }
}
module.exports = { GroceryList }