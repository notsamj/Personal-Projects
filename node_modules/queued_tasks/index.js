const Queue = require('queue');
// Please Note: I wrote this in 2019 or 2020 and refactored it in 2023. Some of the design is confusing to me as I neglected to put comments at the time.
class QueuedTaskManager{
    constructor(asyncTask){
        this.queue = new Queue();
        this.task = asyncTask;
    }

    async doTask(taskDetails){
        let queue = this.queue;
        let wait = new Promise(function(resolve, reject) {
            queue.enqueue(resolve);
        });

        // If the request can be handled immediately
        if (this.ready()){
            this.handleNextTask();
        }

        await wait;
        let result = await this.task(taskDetails);
        this.queue.dequeue(); // Remove the first thing in the queue
        this.handleNextTask(); // Handle the next task
        return result;
    }

    handleNextTask(){
        if (!this.queue.isEmpty()){
            let resolve = this.queue.peek();
            resolve();
        }
    }

    ready(){
        return this.queue.getLength() == 1;
    }

}

module.exports = QueuedTaskManager;